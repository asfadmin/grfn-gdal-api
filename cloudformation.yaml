AWSTemplateFormatVersion: 2010-09-09

Parameters:

  LogBucket:
    Type: String

  LogPrefix:
    Type: String
    Default: s3-access/

  StorageExpirationInDays:
    Type: Number
    MinValue: 1
    Default: 7

  ProductPath:
    Type: String
    Default: /vsicurl/https://s3.amazonaws.com/gdal-api-test/

  GdalLayerArn:
    Type: String

  GdalDataPath:
    Type: String
    Default: /opt/lib/data

  UrsHostname:
    Type: String
    Default: urs.earthdata.nasa.gov
    AllowedValues:
    - urs.earthdata.nasa.gov
    - uat.urs.earthdata.nasa.gov

  UrsUsername:
    Type: String

  UrsPassword:
    Type: String
    NoEcho: true

Outputs:

  ApiEndpoint:
    Value: !Sub "https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/"

Resources:

  Secret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Ref AWS::StackName
      SecretString: !Sub |-
        {
          "netrc_content": "machine ${UrsHostname} login ${UrsUsername} password ${UrsPassword}"
        }

  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref AWS::StackName
      LifecycleConfiguration:
        Rules:
        - Status: Enabled
          AbortIncompleteMultipartUpload:
            DaysAfterInitiation: 1
        - Status: Enabled
          ExpirationInDays: !Ref StorageExpirationInDays
      LoggingConfiguration:
        DestinationBucketName: !Ref LogBucket
        LogFilePrefix: !Sub "${LogPrefix}${AWS::StackName}/"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal: "*"
          Action: s3:GetObject
          Resource: !Sub "${Bucket.Arn}/*"

  SubsetStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        Name: !Sub "${AWS::StackName}-subset"
        Bucket: !Ref Bucket
        ProductPath: !Ref ProductPath
        GdalLayerArn: !Ref GdalLayerArn
        GdalDataPath: !Ref GdalDataPath
        SecretArn: !Ref Secret
      TemplateURL: subset/cloudformation.yaml

  RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Ref AWS::StackName
      Body:
        openapi: 3.0.0
        info:
          title: gdal-api
          version: 0.0.1
        paths:
          /subset:
            get:
              parameters:
              - name: lrx
                in: query
                required: true
                schema:
                  type: number
                  minimum: -180
                  maximum: 180
              - name: lry
                in: query
                required: true
                schema:
                  type: number
                  minimum: -90
                  maximum: 90
              - name: ulx
                in: query
                required: true
                schema:
                  type: number
                  minimum: -180
                  maximum: 180
              - name: uly
                in: query
                required: true
                schema:
                  type: number
                  minimum: -90
                  maximum: 90
              - name: product
                in: query
                required: true
                schema:
                  type: string
              responses:
                '200':
                  description: 200 response
                  content:
                    application/json:
                      schema:
                        $ref: "#/components/schemas/Empty"
              x-amazon-apigateway-request-validator: basic
              x-amazon-apigateway-integration:
                type: aws_proxy
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SubsetStack.Outputs.LambdaArn}/invocations"
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehvaior: when_no_match
                responses:
                  default:
                    statusCode: 200
        components:
          schemas:
            Empty:
              title: Empty Schema
              type: object
        x-amazon-apigateway-request-validators:
          basic:
            validateRequestParameters: true
            validateRequestBody: true

  Deployment:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId: !Ref RestApi

  Stage:
    Type: AWS::ApiGateway::Stage
    Properties:
      StageName: gdal
      RestApiId: !Ref RestApi
      DeploymentId: !Ref Deployment

  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt SubsetStack.Outputs.LambdaArn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*"
